if (isLibrary.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion 27
    resourcePrefix "user_"

    defaultConfig {
        if (!isLibrary.toBoolean()) {
            applicationId "com.liubase.groups"
        }

        minSdkVersion 26
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "GroupUser"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildToolsVersion '27.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

ext {
    com_android_version = '27.1.1'
}

dependencies {
    implementation "com.liubase.groups:GroupMain:1.0.17"
    implementation "com.liubase.groups:GroupNetwork:1.0.3"

    //com.android libs
    //support libraries
    implementation "com.android.support:support-v4:$com_android_version"
    implementation "com.android.support:appcompat-v7:$com_android_version"
    implementation "com.android.support:support-fragment:$com_android_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

// Upload to JCenter
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
def siteUrl ='https://github.com/jeffreyliu888/GroupUser'
def gitUrl ='https://github.com/jeffreyliu888/GroupUser.git'

group = "com.liubase.groups"
version = "1.0.1"
def libName = "GroupUser"

task sourcesJar(type: Jar) {
    archiveName = libName+"-"+version+"-sources.jar"
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask, dependsOn: sourcesJar) {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/docs/javadoc"
}

task javadoc(type: Javadoc, dependsOn: dokkaJavadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    options.links "https://github.com/jeffreyliu888/GroupUser"
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveName = libName+"-"+version+"-javadoc.jar"
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {

        pom {
            project {
                packaging 'aar'
                name 'Groups Series - GroupUser Lib'
                artifactId 'GroupUser'
                url siteUrl
                licenses {
                    license {
                        name 'Groups Series - GroupUser Lib'
                        url 'https://github.com/jeffreyliu888/GroupUser'
                    }
                }
                developers {
                    developer {
                        id 'jeffreyliu888'
                        name 'Jeffrey Liu'
                        email 'jeffrey.jian.liu@hotmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "Groups"
        name = libName
        desc = 'Groups Series - GroupUser Lib'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["GPL-3.0"]
        publish = true
    }
}